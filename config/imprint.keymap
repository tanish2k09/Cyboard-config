#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none       &none   &none     &none     &none          &none                             &none          &none     &none      &none     &none     &none
&kp EQUAL   &kp N1  &kp N2    &kp N3    &kp N4         &kp N5                            &kp N6         &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB     &kp Q   &kp W     &kp E     &kp R          &kp T                             &kp Y          &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp ESCAPE  &kp A   &kp S     &kp D     &kp F          &kp G                             &kp H          &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT   &kp Z   &kp X     &kp C     &kp V          &kp B                             &kp N          &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&tog 1      &trans  &kp LGUI  &kp LALT  &trans                                                          &trans    &kp LBKT   &kp RBKT  &trans    &trans
                                        &kp SPACE      &kp LEFT_CONTROL  &kp LEFT_ALT    &kp ENTER      &kp BSPC  &kp RCTRL
                                        &kp BACKSPACE  &mo 2             &mo 3           &kp BACKSPACE  &mo 3     &mo 2
            >;
        };

        Gaming {
            bindings = <
&none       &none   &none     &none     &none          &none                             &none          &none     &none      &none     &none     &none
&kp EQUAL   &kp N1  &kp N2    &kp N3    &kp N4         &kp N5                            &kp N6         &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB     &kp T   &kp Q     &kp W     &kp E          &kp R                             &kp Y          &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp ESCAPE  &kp G   &kp A     &kp S     &kp D          &kp F                             &kp H          &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT   &kp Z   &kp X     &kp C     &kp V          &kp B                             &kp N          &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&tog 1      &trans  &kp LGUI  &kp LALT  &trans                                                          &trans    &kp LBKT   &kp RBKT  &trans    &trans
                                        &kp SPACE      &kp LEFT_CONTROL  &kp LEFT_ALT    &kp ENTER      &kp BSPC  &kp RCTRL
                                        &kp BACKSPACE  &mo 2             &mo 3           &kp BACKSPACE  &mo 3     &mo 2
            >;
        };

        Numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans         &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans         &trans        &trans     &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans            &trans          &none          &none         &none      &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans            &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans            &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans  &trans
&trans  &trans  &trans  &kp N0  &trans                                    &trans         &trans        &trans     &trans  &trans
                                &trans  &trans  &trans    &trans          &trans         &trans
                                &trans  &trans  &trans    &trans          &trans         &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &to 4
&to 4        &trans        &trans        &trans        &trans                                                 &trans           &trans           &trans           &trans           &to 4
                                                       &trans        &trans        &trans    &trans           &trans           &trans
                                                       &trans        &trans        &trans    &trans           &trans           &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
